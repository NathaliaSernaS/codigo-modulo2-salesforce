@isTest
private class TestQuoteInvTrigger {
    ////////////////////CheckObjectsBefore
    //FAILURE
    @isTest static void TestCheckObjectsBeforeFailure(){
        //Test data setup
        Opportunity testOpportunity = new Opportunity(Name='Opportunity Test',
                                                     CloseDate=Date.newInstance(2021, 2, 17),
                                                     StageName='Prospecting');
        insert testOpportunity;
        Quote testQuote = new Quote(Name='Test Quote',
                                   OpportunityId=testOpportunity.Id,
                                   Status='Approved');
        
        //Perform test
        Test.startTest();
        //try
        Database.SaveResult result;
        try{
            insert testQuote; //No failures allowed
        }catch(Exception e){
            System.Debug(e.getMessage());
            System.assert(e.GetMessage().Contains('No existe un producto'));
        }
        Test.stopTest();
    }
    
    //SUCCESS
    @isTest static void TestCheckObjectsBeforeSuccess(){
        //Test data setup
        Opportunity testOpportunity = new Opportunity(Name='Opportunity Test',
                                                     CloseDate=Date.newInstance(2021, 2, 17),
                                                     StageName='Prospecting');
        
        insert testOpportunity;
		
              
        Product2 testProduct = new Product2(Name='Test Product',
                                           ProductCode='TEST01');
        ////PRICEBOOK (Before OLI)
        
        insert testProduct;
        Id standardPBID = Test.getStandardPricebookId();
        PricebookEntry testPricebookEntry = new PricebookEntry(Product2Id=testProduct.Id,
                                                              Pricebook2Id=standardPBID,
                                                              UnitPrice=12.2,
                                                              IsActive=true);
        
        insert testPricebookEntry;
        
        try{
            OpportunityLineItem OLITest = new OpportunityLineItem(OpportunityId=testOpportunity.Id,
                                                                     Quantity=8,
                                                                     TotalPrice=12.2,
                                                                     PricebookEntryId=testPricebookEntry.Id,
                                                                     Product2Id=testProduct.Id);
        insert OLITest;            
        }catch(Exception e){
            System.Debug(e.getMessage());
        }

        Quote testQuote = new Quote(Name='Test Quote',
                                   OpportunityId=testOpportunity.Id,
                                   Status='Approved');
        //Perform test
        Test.startTest();
        Database.SaveResult result = Database.insert(testQuote, true); //No failures allowed
        Test.stopTest();
        //Verify
		System.assert(result.isSuccess()); //Should NOT be an error
        System.assertEquals(true, result.getErrors().isEmpty());
    }
    
    ///////////////////////////////////////CheckObjectsAfter/////////////////////////////////////////////
    //FAILURE
    @isTest static void TestCheckObjectsAfterFailure(){
        //Test data setup
        Id standardPBID = Test.getStandardPricebookId();
        Opportunity testOpportunity = new Opportunity(Name='Opportunity Test',
                                                     CloseDate=Date.newInstance(2021, 2, 17),
                                                     StageName='Prospecting',
                                                     Pricebook2Id=standardPBID);
        insert testOpportunity;
        Product2 testProduct = new Product2(Name='Test Product',
                                           ProductCode='TEST01');
        insert testProduct;
        
        ////PRICEBOOKENTRY (Before OLI)
        PricebookEntry testPricebookEntry = new PricebookEntry(Product2Id=testProduct.Id,
                                                              Pricebook2Id=standardPBID,
                                                              UnitPrice=12.2,
                                                              IsActive=true);
        insert testPricebookEntry;
        OpportunityLineItem OLITest = new OpportunityLineItem(OpportunityId=testOpportunity.Id,
                                                             Quantity=8,
                                                             TotalPrice=12.2,
                                                             PricebookEntryId=testPricebookEntry.Id,
                                                             Product2Id=testProduct.Id);
        
        try{
            insert OLITest;
        }catch(Exception e){
            System.Debug(e.getMessage());
        }
        
        //Create Quote on 'Draft' to avoid first error and then change it to 'Approved'
        Quote testQuote = new Quote(Name='Test Quote',
                                   OpportunityId=testOpportunity.Id,
                                   Status='Draft');
        
        //To throw the erros
        //Don't create QLI
        insert testQuote;
        //Update Status
        testQuote.Status = 'Approved';
        
        //Perform test
        Test.startTest();
        try{
            update testQuote; //No failures allowed
        }catch(Exception e){
            System.assert(e.GetMessage().Contains('No existe un producto'));
        }
        Test.stopTest();
    }
    
    //SUCCESS
    @isTest static void TestCheckObjectsAfterSuccess(){
       	//Test data setup
        Id standardPBID = Test.getStandardPricebookId();
        Opportunity testOpportunity = new Opportunity(Name='Opportunity Test',
                                                     CloseDate=Date.newInstance(2021, 2, 17),
                                                     StageName='Prospecting',
                                                     Pricebook2Id=standardPBID);
        insert testOpportunity;
        Product2 testProduct = new Product2(Name='Test Product',
                                           ProductCode='TEST01');
        insert testProduct;
        
        ////PRICEBOOKENTRY (Before OLI)
        PricebookEntry testPricebookEntry = new PricebookEntry(Product2Id=testProduct.Id,
                                                              Pricebook2Id=standardPBID,
                                                              UnitPrice=12.2,
                                                              IsActive=true);
        insert testPricebookEntry;
        OpportunityLineItem OLITest = new OpportunityLineItem(OpportunityId=testOpportunity.Id,
                                                             Quantity=8,
                                                             TotalPrice=12.2,
                                                             PricebookEntryId=testPricebookEntry.Id,
                                                             Product2Id=testProduct.Id);

		insert OLITest;
        
        
        Quote testQuote = new Quote(Name='Test Quote',
                                   OpportunityId=testOpportunity.Id,
                                   Status='Draft');
        insert testQuote;

        //Create QLI before the Quote to avoid error.
        QuoteLineItem QLITest = new QuoteLineItem(QuoteId=testQuote.Id,
                                                 PricebookEntryId = testPricebookEntry.Id,
                                                 Quantity = 8,
                                                 UnitPrice = 12.2,
                                                 Product2Id = testProduct.Id);
        try{        
        	insert QLITest;
        }catch(Exception e){
            System.Debug(e.getMessage());
        }
        
        testQuote.Status = 'Approved';
        
        //Perform test
        Test.startTest();
        Database.SaveResult result = Database.update(testQuote, true); //No failures allowed
        Test.stopTest();
        
        //Verify
		System.assert(result.isSuccess()); //Should NOT be an error
        System.assertEquals(true, result.getErrors().isEmpty());
    }
    
    ////////////////////////////////////////DiscountOnInventory////////////////////////////////////////////
    @isTest static void TestDiscountOnInventory(){
        //Test data setup
        Id standardPBID = Test.getStandardPricebookId();
        Opportunity testOpportunity = new Opportunity(Name='Opportunity Test',
                                                     CloseDate=Date.newInstance(2021, 2, 17),
                                                     StageName='Prospecting',
                                                     Pricebook2Id=standardPBID);
        insert testOpportunity;
        Product2 testProduct = new Product2(Name='Test Product',
                                           ProductCode='TEST01');
        insert testProduct;
        Inventario__c testInv = new Inventario__c(Name='Test Product',
                                                 CodigoProd__c='TEST01',
                                                 	Cantidad_dis__c=75);
        insert testInv;
        
         ////PRICEBOOKENTRY (Before OLI)
        PricebookEntry testPricebookEntry = new PricebookEntry(Product2Id=testProduct.Id,
                                                              Pricebook2Id=standardPBID,
                                                              UnitPrice=12.2,
                                                              IsActive=true);
        System.Debug('----Checkpoint 2----');
        insert testPricebookEntry;
        OpportunityLineItem OLITest = new OpportunityLineItem(OpportunityId=testOpportunity.Id,
                                                             Quantity=8,
                                                             TotalPrice=12.2,
                                                             PricebookEntryId=testPricebookEntry.Id,
                                                             Product2Id=testProduct.Id);

        insert OLITest;

        
        Quote testQuote = new Quote(Name='Test Quote',
                                   OpportunityId=testOpportunity.Id,
                                   Status='Approved');
        System.Debug('----Checkpoint 1----');
        //Create QLI before the Quote to avoid error.
              
        
           
        System.Debug('----Checkpoint 0----');
        //Perform test
        Test.startTest();        
        Database.SaveResult result = Database.insert(testQuote, true); //No failures allowed
        
        QuoteLineItem QLITest = new QuoteLineItem(QuoteId=testQuote.Id,
                                                 PricebookEntryId = testPricebookEntry.Id,
                                                 Quantity=8,
                                                 UnitPrice = 12.2,
                                                 Product2Id = testProduct.Id);
        insert QLITest; 
        
        Test.stopTest();
        System.assert(result.isSuccess()); //Should NOT be an error
        System.assertEquals(true, result.getErrors().isEmpty());
        
    }    
}